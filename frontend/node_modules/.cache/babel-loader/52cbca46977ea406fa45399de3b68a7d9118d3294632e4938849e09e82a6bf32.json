{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Products API\nexport const productsAPI = {\n  getAll: () => api.get('/products/'),\n  getById: id => api.get(`/products/${id}/`),\n  create: data => api.post('/products/', data),\n  update: (id, data) => api.put(`/products/${id}/`, data),\n  delete: id => api.delete(`/products/${id}/`),\n  search: query => api.get(`/products/?search=${query}`)\n};\n\n// Recipes API\nexport const recipesAPI = {\n  getAll: () => api.get('/recipes/'),\n  getById: id => api.get(`/recipes/${id}/`),\n  create: data => api.post('/recipes/', data),\n  update: (id, data) => api.put(`/recipes/${id}/`, data),\n  delete: id => api.delete(`/recipes/${id}/`),\n  search: query => api.get(`/recipes/?search=${query}`),\n  calculateCost: id => api.post(`/recipes/${id}/calculate_cost/`)\n};\n\n// Recipe Ingredients API\nexport const recipeIngredientsAPI = {\n  getAll: () => api.get('/recipe-ingredients/'),\n  getByRecipe: recipeId => api.get(`/recipe-ingredients/?recipe=${recipeId}`),\n  create: data => api.post('/recipe-ingredients/', data),\n  update: (id, data) => api.put(`/recipe-ingredients/${id}/`, data),\n  delete: id => api.delete(`/recipe-ingredients/${id}/`)\n};\n\n// Settings API\nexport const settingsAPI = {\n  getAll: () => api.get('/settings/'),\n  getById: id => api.get(`/settings/${id}/`),\n  create: data => api.post('/settings/', data),\n  update: (id, data) => api.put(`/settings/${id}/`, data),\n  delete: id => api.delete(`/settings/${id}/`),\n  getByName: name => api.get(`/settings/?name=${name}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","productsAPI","getAll","get","getById","id","data","post","update","put","delete","search","query","recipesAPI","calculateCost","recipeIngredientsAPI","getByRecipe","recipeId","settingsAPI","getByName","name"],"sources":["C:/Users/Samvel/Desktop/sweet/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosResponse } from 'axios';\r\nimport { \r\n  Product, \r\n  Recipe, \r\n  RecipeCreateUpdate, \r\n  RecipeIngredient, \r\n  Setting, \r\n  CostCalculation \r\n} from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Products API\r\nexport const productsAPI = {\r\n  getAll: (): Promise<AxiosResponse<Product[]>> => api.get('/products/'),\r\n  getById: (id: number): Promise<AxiosResponse<Product>> => api.get(`/products/${id}/`),\r\n  create: (data: Omit<Product, 'id' | 'price_per_unit' | 'created_at' | 'updated_at'>): Promise<AxiosResponse<Product>> => \r\n    api.post('/products/', data),\r\n  update: (id: number, data: Partial<Omit<Product, 'id' | 'price_per_unit' | 'created_at' | 'updated_at'>>): Promise<AxiosResponse<Product>> => \r\n    api.put(`/products/${id}/`, data),\r\n  delete: (id: number): Promise<AxiosResponse<void>> => api.delete(`/products/${id}/`),\r\n  search: (query: string): Promise<AxiosResponse<Product[]>> => api.get(`/products/?search=${query}`),\r\n};\r\n\r\n// Recipes API\r\nexport const recipesAPI = {\r\n  getAll: (): Promise<AxiosResponse<Recipe[]>> => api.get('/recipes/'),\r\n  getById: (id: number): Promise<AxiosResponse<Recipe>> => api.get(`/recipes/${id}/`),\r\n  create: (data: RecipeCreateUpdate): Promise<AxiosResponse<Recipe>> => api.post('/recipes/', data),\r\n  update: (id: number, data: RecipeCreateUpdate): Promise<AxiosResponse<Recipe>> => api.put(`/recipes/${id}/`, data),\r\n  delete: (id: number): Promise<AxiosResponse<void>> => api.delete(`/recipes/${id}/`),\r\n  search: (query: string): Promise<AxiosResponse<Recipe[]>> => api.get(`/recipes/?search=${query}`),\r\n  calculateCost: (id: number): Promise<AxiosResponse<CostCalculation>> => api.post(`/recipes/${id}/calculate_cost/`),\r\n};\r\n\r\n// Recipe Ingredients API\r\nexport const recipeIngredientsAPI = {\r\n  getAll: (): Promise<AxiosResponse<RecipeIngredient[]>> => api.get('/recipe-ingredients/'),\r\n  getByRecipe: (recipeId: number): Promise<AxiosResponse<RecipeIngredient[]>> => \r\n    api.get(`/recipe-ingredients/?recipe=${recipeId}`),\r\n  create: (data: Omit<RecipeIngredient, 'id' | 'product_name' | 'product_unit' | 'cost'>): Promise<AxiosResponse<RecipeIngredient>> => \r\n    api.post('/recipe-ingredients/', data),\r\n  update: (id: number, data: Partial<Omit<RecipeIngredient, 'id' | 'product_name' | 'product_unit' | 'cost'>>): Promise<AxiosResponse<RecipeIngredient>> => \r\n    api.put(`/recipe-ingredients/${id}/`, data),\r\n  delete: (id: number): Promise<AxiosResponse<void>> => api.delete(`/recipe-ingredients/${id}/`),\r\n};\r\n\r\n// Settings API\r\nexport const settingsAPI = {\r\n  getAll: (): Promise<AxiosResponse<Setting[]>> => api.get('/settings/'),\r\n  getById: (id: number): Promise<AxiosResponse<Setting>> => api.get(`/settings/${id}/`),\r\n  create: (data: Omit<Setting, 'id' | 'created_at' | 'updated_at'>): Promise<AxiosResponse<Setting>> => \r\n    api.post('/settings/', data),\r\n  update: (id: number, data: Partial<Omit<Setting, 'id' | 'created_at' | 'updated_at'>>): Promise<AxiosResponse<Setting>> => \r\n    api.put(`/settings/${id}/`, data),\r\n  delete: (id: number): Promise<AxiosResponse<void>> => api.delete(`/settings/${id}/`),\r\n  getByName: (name: string): Promise<AxiosResponse<Setting[]>> => api.get(`/settings/?name=${name}`),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAyB,OAAO;AAU5C,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,WAAW,GAAG;EACzBC,MAAM,EAAEA,CAAA,KAAyCL,GAAG,CAACM,GAAG,CAAC,YAAY,CAAC;EACtEC,OAAO,EAAGC,EAAU,IAAsCR,GAAG,CAACM,GAAG,CAAC,aAAaE,EAAE,GAAG,CAAC;EACrFP,MAAM,EAAGQ,IAA0E,IACjFT,GAAG,CAACU,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;EAC9BE,MAAM,EAAEA,CAACH,EAAU,EAAEC,IAAmF,KACtGT,GAAG,CAACY,GAAG,CAAC,aAAaJ,EAAE,GAAG,EAAEC,IAAI,CAAC;EACnCI,MAAM,EAAGL,EAAU,IAAmCR,GAAG,CAACa,MAAM,CAAC,aAAaL,EAAE,GAAG,CAAC;EACpFM,MAAM,EAAGC,KAAa,IAAwCf,GAAG,CAACM,GAAG,CAAC,qBAAqBS,KAAK,EAAE;AACpG,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG;EACxBX,MAAM,EAAEA,CAAA,KAAwCL,GAAG,CAACM,GAAG,CAAC,WAAW,CAAC;EACpEC,OAAO,EAAGC,EAAU,IAAqCR,GAAG,CAACM,GAAG,CAAC,YAAYE,EAAE,GAAG,CAAC;EACnFP,MAAM,EAAGQ,IAAwB,IAAqCT,GAAG,CAACU,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;EACjGE,MAAM,EAAEA,CAACH,EAAU,EAAEC,IAAwB,KAAqCT,GAAG,CAACY,GAAG,CAAC,YAAYJ,EAAE,GAAG,EAAEC,IAAI,CAAC;EAClHI,MAAM,EAAGL,EAAU,IAAmCR,GAAG,CAACa,MAAM,CAAC,YAAYL,EAAE,GAAG,CAAC;EACnFM,MAAM,EAAGC,KAAa,IAAuCf,GAAG,CAACM,GAAG,CAAC,oBAAoBS,KAAK,EAAE,CAAC;EACjGE,aAAa,EAAGT,EAAU,IAA8CR,GAAG,CAACU,IAAI,CAAC,YAAYF,EAAE,kBAAkB;AACnH,CAAC;;AAED;AACA,OAAO,MAAMU,oBAAoB,GAAG;EAClCb,MAAM,EAAEA,CAAA,KAAkDL,GAAG,CAACM,GAAG,CAAC,sBAAsB,CAAC;EACzFa,WAAW,EAAGC,QAAgB,IAC5BpB,GAAG,CAACM,GAAG,CAAC,+BAA+Bc,QAAQ,EAAE,CAAC;EACpDnB,MAAM,EAAGQ,IAA6E,IACpFT,GAAG,CAACU,IAAI,CAAC,sBAAsB,EAAED,IAAI,CAAC;EACxCE,MAAM,EAAEA,CAACH,EAAU,EAAEC,IAAsF,KACzGT,GAAG,CAACY,GAAG,CAAC,uBAAuBJ,EAAE,GAAG,EAAEC,IAAI,CAAC;EAC7CI,MAAM,EAAGL,EAAU,IAAmCR,GAAG,CAACa,MAAM,CAAC,uBAAuBL,EAAE,GAAG;AAC/F,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAG;EACzBhB,MAAM,EAAEA,CAAA,KAAyCL,GAAG,CAACM,GAAG,CAAC,YAAY,CAAC;EACtEC,OAAO,EAAGC,EAAU,IAAsCR,GAAG,CAACM,GAAG,CAAC,aAAaE,EAAE,GAAG,CAAC;EACrFP,MAAM,EAAGQ,IAAuD,IAC9DT,GAAG,CAACU,IAAI,CAAC,YAAY,EAAED,IAAI,CAAC;EAC9BE,MAAM,EAAEA,CAACH,EAAU,EAAEC,IAAgE,KACnFT,GAAG,CAACY,GAAG,CAAC,aAAaJ,EAAE,GAAG,EAAEC,IAAI,CAAC;EACnCI,MAAM,EAAGL,EAAU,IAAmCR,GAAG,CAACa,MAAM,CAAC,aAAaL,EAAE,GAAG,CAAC;EACpFc,SAAS,EAAGC,IAAY,IAAwCvB,GAAG,CAACM,GAAG,CAAC,mBAAmBiB,IAAI,EAAE;AACnG,CAAC;AAED,eAAevB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}